% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smc_mallows_new_item_rank.R
\name{smc_mallows_new_item_rank}
\alias{smc_mallows_new_item_rank}
\title{SMC-Mallows new item rank}
\usage{
smc_mallows_new_item_rank(
  rankings,
  n_particles,
  logz_estimate = NULL,
  mcmc_steps,
  augmented_data_init = NULL,
  rho_samples_init = NULL,
  alpha_samples_init = 0,
  alpha = 0,
  alpha_prop_sd = 0.5,
  lambda = 0.1,
  alpha_max = 1e+06,
  aug_method = "random",
  verbose = FALSE,
  alpha_fixed = FALSE,
  metric = "footrule",
  leap_size = 1
)
}
\arguments{
\item{rankings}{3D array of size n_assessors by n_items by timesteps
containing a set of observed rankings of timesteps time steps}

\item{n_particles}{Integer specifying the number of particles}

\item{logz_estimate}{Estimate of the partition function, computed with
\code{\link{estimate_partition_function}}. Be aware that when using an
estimated partition function when \code{n_clusters > 1}, the partition
function should be estimated over the whole range of \eqn{\alpha} values
covered by the prior distribution for \eqn{\alpha} with high probability.
In the case that a cluster \eqn{\alpha_c} becomes empty during the
Metropolis-Hastings algorithm, the posterior of \eqn{\alpha_c} equals its
prior. For example, if the rate parameter of the exponential prior equals,
say \eqn{\lambda = 0.001}, there is about 37 \% (or exactly: \code{1 -
pexp(1000, 0.001)}) prior probability that \eqn{\alpha_c > 1000}. Hence
when \code{n_clusters > 1}, the estimated partition function should cover
this range, or \eqn{\lambda} should be increased.}

\item{mcmc_steps}{Integer value for the number of applications we apply
the MCMC move kernel}

\item{augmented_data_init}{Initial values for augmented rankings.}

\item{rho_samples_init}{Initial values for rho samples.}

\item{alpha_samples_init}{Initial values for alpha samples.}

\item{alpha}{numeric value of the scale parameter.}

\item{alpha_prop_sd}{Numeric value of the standard deviation of the prior
distribution for alpha}

\item{lambda}{Strictly positive numeric value specifying the rate parameter
of the truncated exponential prior distribution of alpha.}

\item{alpha_max}{Maximum value of alpha in the truncated exponential prior
distribution.}

\item{aug_method}{A character string specifying the approach for filling in
the missing data, options are "pseudolikelihood" or "random"}

\item{verbose}{Logical specifying whether to print out the progress of the
SMC-Mallows algorithm. Defaults to \code{FALSE}.}

\item{alpha_fixed}{Logical indicating whether to sample \code{alpha} or not.}

\item{metric}{A character string specifying the distance metric to use in the
Bayesian Mallows Model. Available options are \code{"footrule"},
\code{"spearman"}, \code{"cayley"}, \code{"hamming"}, \code{"kendall"}, and
\code{"ulam"}.}

\item{leap_size}{leap_size Integer specifying the step size of the
leap-and-shift proposal distribution}
}
\value{
An object of class \code{c("SMCMallowsUpdatedPartial", "SMCMallows")}
containing the following elements:
\itemize{
\item{"rho_samples"}{An array of samples of the consensus ranking \eqn{\rho}.}
\item{"alpha_samples"}{A matrix with samples of \eqn{\alpha}. Empty when \code{alpha_fixed = TRUE}.}
\item{"augmented_rankings"}{Array of augmented rankings.}
\item{"ESS"}{Vector of effective sample sizes at each timepoint.}
}
}
\description{
Function to perform resample-move SMC algorithm where we receive
  a new item ranks from an existing user at each time step. Each correction
  and augmentation is done by filling in the missing item ranks using
  pseudolikelihood augmentation.
}
\seealso{
Other modeling: 
\code{\link{compute_mallows_mixtures}()},
\code{\link{compute_mallows}()},
\code{\link{update_mallows}()}
}
\concept{modeling}
