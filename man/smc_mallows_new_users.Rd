% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smc_mallows_new_users.R
\name{smc_mallows_new_users}
\alias{smc_mallows_new_users}
\title{SMC-Mallows New Users}
\usage{
smc_mallows_new_users(
  rankings,
  type = c("complete", "partial", "partial_alpha_fixed"),
  n_items,
  N,
  Time,
  mcmc_kernel_app,
  num_new_obs,
  alpha_prop_sd = 0.5,
  lambda = 0.1,
  alpha_max = 1e+06,
  alpha = 0,
  aug_method = "random",
  logz_estimate = NULL,
  verbose = FALSE,
  metric = "footrule",
  leap_size = 1
)
}
\arguments{
\item{rankings}{Matrix containing the full set of observed rankings of size
n_assessors by n_items}

\item{type}{One of \code{"complete"}, \code{"partial"}, or
\code{"partial_alpha_fixed"}.}

\item{n_items}{Integer is the number of items in a ranking}

\item{N}{Integer specifying the number of particles}

\item{Time}{Integer specifying the number of time steps in the SMC algorithm}

\item{mcmc_kernel_app}{Integer value for the number of applications we apply
the MCMC move kernel}

\item{num_new_obs}{Integer value for the number of new observations (complete
rankings) for each time step}

\item{alpha_prop_sd}{Numeric value specifying the standard deviation of the
lognormal proposal distribution used for \eqn{\alpha} in the
Metropolis-Hastings algorithm. Defaults to \code{0.1}.}

\item{lambda}{Strictly positive numeric value specifying the rate parameter
of the truncated exponential prior distribution of \eqn{\alpha}. Defaults
to \code{0.1}. When \code{n_cluster > 1}, each mixture component
\eqn{\alpha_{c}} has the same prior distribution.}

\item{alpha_max}{Maximum value of \code{alpha} in the truncated exponential
prior distribution.}

\item{alpha}{A numeric value of the scale parameter which is known and fixed.}

\item{aug_method}{A character string specifying the approach for filling in
the missing data, options are "pseudolikelihood" or "random".}

\item{logz_estimate}{Estimate of the partition function, computed with
\code{\link{estimate_partition_function}}. Be aware that when using an
estimated partition function when \code{n_clusters > 1}, the partition
function should be estimated over the whole range of \eqn{\alpha} values
covered by the prior distribution for \eqn{\alpha} with high probability.
In the case that a cluster \eqn{\alpha_c} becomes empty during the
Metropolis-Hastings algorithm, the posterior of \eqn{\alpha_c} equals its
prior. For example, if the rate parameter of the exponential prior equals,
say \eqn{\lambda = 0.001}, there is about 37 \% (or exactly: \code{1 -
pexp(1000, 0.001)}) prior probability that \eqn{\alpha_c > 1000}. Hence
when \code{n_clusters > 1}, the estimated partition function should cover
this range, or \eqn{\lambda} should be increased.}

\item{verbose}{Logical specifying whether to print out the progress of the
SMC-Mallows algorithm. Defaults to \code{FALSE}.}

\item{metric}{A character string specifying the distance metric to use in the
Bayesian Mallows Model. Available options are \code{"footrule"},
\code{"spearman"}, \code{"cayley"}, \code{"hamming"}, \code{"kendall"}, and
\code{"ulam"}.}

\item{leap_size}{leap_size Integer specifying the step size of the
leap-and-shift proposal distribution}
}
\value{
An object of class \code{"SMCMallows"} containing the following elements:
\itemize{
\item{"rho_samples"}{An array of samples of the consensus ranking \eqn{\rho}.}
\item{"alpha_samples"}{A matrix with samples of \eqn{\alpha}. Empty when \code{alpha_fixed = TRUE}.}
\item{"augmented_rankings"}{Array of augmented rankings.}
\item{"ESS"}{Vector of effective sample sizes at each timepoint.}
}
}
\description{
Function to perform resample-move SMC algorithm where we receive
  new users with complete rankings at each time step. See Chapter 4 of
  \insertCite{steinSequentialInferenceMallows2023}{BayesMallows}
}
\examples{
# Generate basic elements
data <- sushi_rankings[1:100, ]
n_items <- ncol(sushi_rankings)
metric <- "footrule"
num_new_obs <- 10

# Calculating rho and alpha samples
samples <- smc_mallows_new_users(
  rankings = data, type = "complete", n_items = n_items, metric = metric,
  leap_size = floor(n_items / 5), N = 100, Time = nrow(data) / num_new_obs,
  mcmc_kernel_app = 5,
  alpha_prop_sd = 0.1, lambda = 0.001, alpha_max = 1e6,
  num_new_obs = num_new_obs, verbose = TRUE
)

# Studying the structure of the output
str(samples)
}
\seealso{
Other modeling: 
\code{\link{compute_mallows_mixtures}()},
\code{\link{compute_mallows}()},
\code{\link{smc_mallows_new_item_rank}()}
}
\concept{modeling}
